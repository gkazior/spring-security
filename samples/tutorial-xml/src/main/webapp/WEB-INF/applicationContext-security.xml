<?xml version="1.0" encoding="UTF-8"?>

<!--
  - Sample namespace-based configuration
  -
  -->

<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <debug />

    <global-method-security pre-post-annotations="enabled" />

    <http pattern="/static/**" security="none"/>
    <http pattern="/loggedout.jsp" security="none"/>

    <http use-expressions="true">
        <custom-filter position="PRE_AUTH_FILTER" ref="tumFilter" />    
        <intercept-url pattern="/secure/extreme/**" access="hasRole('supervisor')"/>
        <intercept-url pattern="/secure/**" access="isAuthenticated()" />
        <!--
             Allow all other requests. In a real application you should
             adopt a whitelisting approach where access is not allowed by default
          -->
        <intercept-url pattern="/**" access="permitAll" />
        <form-login />
        <logout logout-success-url="/loggedout.jsp" delete-cookies="JSESSIONID"/>
        <remember-me />
<!--
    Uncomment to enable X509 client authentication support
        <x509 />
-->
        <!-- Uncomment to limit the number of sessions a user can have -->
        <session-management invalid-session-url="/timeout.jsp">
            <concurrency-control max-sessions="100" error-if-maximum-exceeded="true" />
        </session-management>

    </http>

<authentication-manager alias="authenticationManager">
  <authentication-provider ref="tumAuthProvider" />
</authentication-manager>

<beans:bean id="tumFilter"
  class="com.comarch.tum.TumAuthFilter">
  <beans:property name="authenticationManager" ref="authenticationManager" />
</beans:bean>

<beans:bean id="tumAuthProvider"
  class="com.comarch.tum.TumAuthenticationProvider">
  <beans:property name="preAuthenticatedUserDetailsService">
    <beans:bean id="userDetailsServiceWrapper"
      class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
      <beans:property name="userDetailsService" ref="tumDetailsService" />
    </beans:bean>
  </beans:property>
</beans:bean>

<beans:bean id="tumDetailsService" class="com.comarch.tum.TumUserDetailsService">
</beans:bean>

</beans:beans>
